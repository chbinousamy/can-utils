name: Build in non-x86 archs

on: [push, pull_request, workflow_dispatch]

jobs:
  build-in-non-x86:
    runs-on: ubuntu-latest
    name: ${{ matrix.distro }} ${{ matrix.arch }} ${{ matrix.compiler.name }}
    
    # Run steps on a matrix of archs.
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu22.04
            #compiler: { name: g++-12, cc: gcc-12, cxx: g++-12 }
          - arch: aarch64
            distro: ubuntu22.04
            #compiler: { name: clang-14, cc: clang-14, cxx: clang++-14 }
          - arch: armv7
            distro: ubuntu22.04
            #compiler: { name: g++-12, cc: gcc-12, cxx: g++-12 }
          - arch: riscv64
            distro: ubuntu22.04
            #compiler: { name: g++-12, cc: gcc-12, cxx: g++-12 }

    steps:
      - uses: actions/checkout@v3.1.0
      - uses: uraimo/run-on-arch-action@v2.5.0
        name: Test in non-x86 container
        continue-on-error: ${{ contains(fromJson('["ppc64le", "s390x"]'), matrix.arch) }}
        id: test
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }} # Not required, but speeds up builds
          setup: |
            mkdir -p "${PWD}/testing"
          dockerRunArgs: |
            --volume "${PWD}:/gnss-sdr"
          #env: |
          #  CC: ${{ matrix.compiler.cc }}
          #  CXX: ${{ matrix.compiler.cxx }}
          shell: /bin/sh
          install: |
            apt-get update -y
            apt-get install -y autoconf libtool
          run: |
            ./autogen.sh
            ./configure
            make
            make distcheck
